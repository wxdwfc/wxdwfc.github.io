<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[XMM's home site]]></title>
  <link href="http://wxdwfc.github.io/atom.xml" rel="self"/>
  <link href="http://wxdwfc.github.io/"/>
  <updated>2017-09-25T10:36:21+08:00</updated>
  <id>http://wxdwfc.github.io/</id>
  <author>
    <name><![CDATA[XingDa Wei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[混凝草音乐节]]></title>
    <link href="http://wxdwfc.github.io/blog/2017/09/16/hun-ning-cao-yin-le-jie/"/>
    <updated>2017-09-16T18:13:58+08:00</updated>
    <id>http://wxdwfc.github.io/blog/2017/09/16/hun-ning-cao-yin-le-jie</id>
    <content type="html"><![CDATA[<h4>#The begining</h4>

<p>九月中，夏天就要（还是已经？）结束了。如果说夏天必须有什么的话，音乐节是必不可少的。</p>

<p>没看过几场live，没去过几场音乐节的我，却非常期待这种活动。Live和CD的音乐截然不同，在live中演奏者与观众的互动往往会增加许多奇妙的元素。</p>

<p>这次混凝草音乐节在浦东的上海瑞可碧橄榄球运动俱乐部举行。十一点半开场，我和瑞丰下午出发，快三点的时候到达了现场。</p>

<!--More-->


<p><img src="http://wxdwfc.github.io/images/cg_festival/1.jpg" width="360px" /><img src="http://wxdwfc.github.io/images/cg_festival/2.jpg" width="360px" /></p>

<p><img src="http://wxdwfc.github.io/images/cg_festival/3.jpg" width="720px" /></p>

<p>刚开场演出的时候人还并不是很多，现场的草地真的是非常大。如果有机会的话下次可以来现场野营:)。 音乐节有一个非常好的地方是，主办方允许带相机。这样的话通常可以拍到非常多的照片。可以我并没有长焦镜头，并不能非常清楚的拍到舞台上的表演者。而且，虽然离舞台有一定的距离，相比较在live中，距离算是非常近的了。</p>

<center><img src="http://wxdwfc.github.io/images/cg_festival/4.jpg" width="720px" /> </center>


<p> <center>Spector 的演出 </center> </p>


<hr />

<h5>#RADWIMPS篇</h5>

<p>如果说有什么让我跑大半个上海去音乐节的话，演出名单中有RADWIMPS绝对是一个非常大的原因。Rad的音乐既能让人感觉到能量也能够感觉到温柔。上一次也是第一次Rad来上海开演唱会的时候非常遗憾没能去到现场。</p>

<center><img src="http://wxdwfc.github.io/images/cg_festival/5.jpg" width="720px" /> </center>


<p> <center>Sparkle时候的现场 </center> </p>


<p>这一次RAD的演出一如既往的给力。</p>

<ul>
<li><p>加唱了<code>Tummy</code> ，看来洋次郎非常关心中国的fans呢:)  <code>之前的shanghai live有粉丝要求唱Tummy，洋次郎清唱了一段233</code></p></li>
<li><p>唱了Spetember桑，非常符合这个月份呢</p></li>
<li><p>现在不仅可以斗琴还可以逗鼓了（毕竟有双鼓手）</p>

<p><center><img src="http://wxdwfc.github.io/images/cg_festival/7.jpg" width="720px" /> </center><p> <center>只能远远的看着洋次郎:)</center> </p></p></li>
</ul>


<h5>下面是曲目表</h5>

<ul>
<li><p>夢灯籠</p></li>
<li><p>前前前世 (movie ver.)</p></li>
<li><p>ギミギミック</p></li>
<li><p>05410-(ん)</p></li>
<li><p>セプテンバーさん</p></li>
<li><p>TUMMY</p></li>
<li><p>棒人间</p></li>
<li><p>デート</p></li>
<li><p>スパークル (original ver.)</p></li>
<li><p>DADA</p></li>
<li><p>おしゃかしゃま</p></li>
<li><p>有心论</p></li>
<li><p>君と羊と青 <code>Encore</code></p>

<p>​</p>

<p>​</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ATC 17]]></title>
    <link href="http://wxdwfc.github.io/blog/2017/07/10/atc-17/"/>
    <updated>2017-07-10T14:25:39+08:00</updated>
    <id>http://wxdwfc.github.io/blog/2017/07/10/atc-17</id>
    <content type="html"><![CDATA[<h2>Keynote 1</h2>

<p><strong>Title</strong>: <a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/bugnion">Computer Systems Research in the Post-Virtualization Era</a></p>

<p><strong>Presenter</strong>: <a href="https://people.epfl.ch/edouard.bugnion">Ed Bugnion</a>  <strong>IX</strong>.(OSDI'14), <strong>scale-out numa</strong>, <strong>Atomic object read</strong>. , one of the founder of <strong>VMWare</strong> (wao)</p>

<p>SGX X VT-x</p>

<p>The big open problems according to Google: <strong>Tail latency</strong>, <strong>Energy propertionaly problem</strong>, <strong><a href="https://cacm.acm.org/magazines/2017/4/215032-attack-of-the-killer-microseconds/fulltext">Understanding the execution mode of microseconds</a></strong></p>

<p>In cloud, capacity is ahead of the demand.</p>

<p>Question3: VM is not the best way to deploy software.</p>

<!--More-->


<hr />

<h2>Track 1 Kernel</h2>

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/li-yiwen">Lock-in-Pop: Securing Privileged Operating System Kernels by Keeping on the Beaten Path</a></strong></p>

<p><strong>Author</strong>: <a href="http://engineering.nyu.edu/people/justin-cappos">Justin Cappos</a>, <strong>NYU</strong>, <strong>Security &amp; system</strong>,</p>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/lawall">Fast and Precise Retrieval of Forward and Back Porting Information for Linux Device Drivers</a></strong></p>

<p><strong>Author</strong>: <a href="http://www-public.tem-tsp.eu/~thomas_g/">Gilles Muller</a></p>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/amit">Optimizing the TLB Shootdown Algorithm with Page Access Tracking</a></strong></p>

<p><strong>Author</strong>: <a href="http://www.cs.technion.ac.il/people/namit/">Nadav Amit</a> <strong>VMWare</strong>, <strong>Virtual CPU validation</strong>(SOSP'15)</p>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/kumar">Falcon: Scaling IO Performance in Multi-SSD Volumes</a></strong></p>

<p><strong>Author</strong>: <a href="https://www.seas.gwu.edu/howie-huang">Howie Huang</a></p>

<hr />

<hr />

<h2>Track 2 Data centers</h2>

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/peng">deTector: a Topology-aware Monitoring System for Data Center Networks</a></strong></p>

<p><strong>Author</strong>: <a href="http://nskeylab.xjtu.edu.cn/people/cchu/publications/">Chengchen H</a></p>

<p>Detecting failures in datacenter networks.</p>

<ul>
<li>Clean failures: server down</li>
<li>Gray failures: not reported by the devices</li>
</ul>


<p>Existing solutions:</p>

<ul>
<li><p>Misses one failure.</p></li>
<li><p>High overhead</p></li>
</ul>


<p><strong>This paper:</strong> an algorithms to find the down server, with small compoments.(Pinnger)</p>

<p>Routing matrix: 0,1 matrix,
How to find the which link is down? (If one path is down)</p>

<p><strong>Question</strong>:</p>

<ul>
<li>How many pinger to use? 2,3 in each rack.How do you cover the whole network?</li>
<li>What is the difference between your work and other work? Main difference is the prob matrix, they send prob without any plan.</li>
<li>In real, it is hard to generate the accurate matrix. How to guarantee it is correct?</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/guo-jian">Pricing Intra-Datacenter Networks with Over-Committed Bandwidth Guarantee</a></strong></p>

<p><strong>Author</strong>: <a href="http://www.cse.cuhk.edu.hk/~cslui/resume.html">John C.S. Lui</a> , 2 paper accepted this year&rsquo;s ATC.</p>

<p>Network performance is hard to to pricing.</p>

<p>Bandwidth is not stable for VM.</p>

<p>SDN based implementation.</p>

<p><strong>Question:</strong></p>

<ul>
<li>How practical is the work? Aussming non-blocking switch.</li>
<li>Deployment of such system. 1. Preventng user from gaming the systm.(No decreasing function) 2. How to prevent DoS attacks(Do not consider).</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/gunawardhana">Unobtrusive Deferred Update Stabilization for Efficient Geo-Replication</a></strong></p>

<p><strong>Author</strong>: <a href="http://www.gsd.inesc-id.pt/~ler/">Luis Rodrigues</a></p>

<p>More meta data, less precises in causality tracking. So needs a way to compress the meta-data.</p>

<p><strong>Question:</strong></p>

<ul>
<li>FIFO link on differnt datacenter network? Does&rsquo;t means that u have to use a single TCP connection.</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/iorgulescu">Don&rsquo;t cry over spilled records: Memory elasticity of data-parallel applications and its application to cluster scheduling</a></strong></p>

<p><strong>Author</strong>: <a href="https://people.epfl.ch/willy.zwaenepoel">Willy Zwaenepoel</a></p>

<p>Maximize the performance of data-parallel application while providing best memory utilization.
Lookig at cluster&rsquo;s memory, usually cluster&rsquo;s memory is <strong>under-utilized</strong></p>

<p>Run hadoop with less memory, performance not much efficient:</p>

<p><strong>Reasons</strong>:</p>

<ul>
<li>Sequential disk access</li>
<li>Additional IO does not cause disk contention.</li>
</ul>


<hr />

<h2>Track 1 Storage (So many erasure coding&hellip;)##</h2>

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/chen-yu-lin">Giza: Erasure Coding Objects across Global Data Centers</a></strong></p>

<p>Microsoft 40 datacenter range globally, 14 in US
=> Reduce datacenter storage costs</p>

<p>When erasuring code wins? coding friendly workloads
170TBs link. (海底光缆)</p>

<p>OneDrive is occupied mostly by large objects.(>=1GBs) => erasure code large objects
Cache objects at one DC. => reduce re-construction</p>

<p><strong>Question:</strong></p>

<ul>
<li>Masterless paxos, what about concurrent put?  The concurrent puts are not very frequently.</li>
<li>Implemented as a client library?  Yes.</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/sun">SmartCuckoo: A Fast and Cost-Efficient Hashing Index Scheme for Cloud Storage Systems</a></strong></p>

<p>I was left wandering is there a lot insert-intensive workloads?</p>

<p>Question:
1. What is the bound if insert performance of smartcuckoo hashing?
2. The memory overhead for the extra structures?</p>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/li-runhui">Repair Pipelining for Erasure-Coded Storage</a></strong></p>

<p>Push the repair performance of erasure-coding to limit.</p>

<p><strong>Question:</strong></p>

<ul>
<li>What about multiple failure? Focused on 1 block failure (common case)</li>
<li>In term of performance, what is the intuation that is much better than the baseline?</li>
<li>Why the method don&rsquo;t work for multiple failures?</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/li-huiba">PARIX: Speculative Partial Writes in Erasure-Coded Systems</a></strong></p>

<p>Overhead to small writes.</p>

<p><strong>Question:</strong></p>

<ul>
<li>SSD PCM?</li>
</ul>


<hr />

<h2>Track 2, Don&rsquo;t forget the memory</h2>

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/hu">Log-Structured Non-Volatile Main Memory</a></strong></p>

<p>A client library for using Non-volatile memory.
Fragementation is not very serious for <strong>main memory</strong>, but it&rsquo;s critical to <strong>NVM</strong>.
<strong>Wear out</strong> of NVM.</p>

<p><strong>Question:</strong></p>

<ul>
<li>//not very important.</li>
<li>How can we actually recovery the address mapping table. (Scan the log and re-construct the address)</li>
<li>The maxium size of the address mapping table. (&lt; 20% of the actual data)</li>
<li>How do u post atomically do meta data and data changes? (Checksum to protect this)</li>
</ul>


<hr />

<p><strong><a href="">Soft updates make fast and simple</a></strong></p>

<p><strong>Question:</strong></p>

<ul>
<li>In disk-based file systems, soft updates, what if some other file system delay the operation?</li>
<li>It does&rsquo;t gaurantee the consistency of user data, only meta-data. What is the cost?</li>
<li>Do u have interfaces like mmap?</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/guo-fan">SmartMD: A High Performance Deduplication Engine with Mixed Pages</a></strong></p>

<p>Take the benefits of both large pages and small pages.</p>

<p>Question:
1. What is the level of committment for the blocks?
2. U mention about the overhead of monitoring, what is the overhead of splitting,re-constructing or something else?
   Splitting is small, re-constructing is large.
3. The behvior of TLB?
4. // i donot understand this.</p>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/wang">Elastic Memory Management for Cloud Data Analytics</a></strong></p>

<p>Data analytics is <strong>memory heavy</strong>.</p>

<p>Container based.</p>

<p>This work: make container memory dynamic.</p>

<p><strong>Questions:</strong></p>

<ul>
<li>Comparing to JVM&rsquo;s default setting? (Min->Max)</li>
<li>If the pause is too long, the distributed setting may think the node is dead. How do u handle this?</li>
<li>The ciritical part of the work is the model to predict, what about the development of the model?</li>
<li>//</li>
</ul>


<hr />

<h2>File Systems</h2>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/hahn">Improving File System Performance of Mobile Storage Systems Using a Decoupled Defragmenter</a></strong></p>

<p>File fragmentation causes smart phone&rsquo;s performance decrease.</p>

<p>De-fragmentation requires the copying -> reduce flash&rsquo;s lifetime.</p>

<p>// trade-off: file system block abstraction is the performance penality? (long fight)</p>

<p><strong>Question:</strong></p>

<ul>
<li>Logical blocks considered harmful? It seems that this abstraction makes the problem.</li>
<li>How can get this? (At Android smart phone)</li>
<li>Why choose Android environment? Because this impacts the user&rsquo;s experience.</li>
<li>Why not use simple solution?</li>
<li>Write overhead for the logical remapping?</li>
<li>Can implement on SSD.</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/lu">Octopus: an RDMA-enabled Distributed Persistent Memory File System</a></strong></p>

<p><strong>Question:</strong></p>

<ul>
<li>One-sided RDMA for data transfer, reliable connection, QP scalability? (12 nodes, no problem)</li>
<li>How the client know the address of the RPC?</li>
</ul>


<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/park">iJournaling: Fine-Grained Journaling for Improving the Latency of Fsync System Call</a></strong></p>

<p>MySQL-tpcc, 140 fsync called / second</p>

<hr />

<p><strong><a href="https://www.usenix.org/conference/atc17/technical-sessions/presentation/misra">Scaling Distributed File Systems in Resource-Harvesting Datacenters</a></strong></p>

<p>Distributed file system cannot scale to the entire datacenter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2017_5_chinasys]]></title>
    <link href="http://wxdwfc.github.io/blog/2017/05/12/2017-5-chinasys/"/>
    <updated>2017-05-12T13:34:56+08:00</updated>
    <id>http://wxdwfc.github.io/blog/2017/05/12/2017-5-chinasys</id>
    <content type="html"><![CDATA[<p>今年的chinasys在上海召开，和图灵奖50周年大会一起召开。
<a href="http://china.acm.org/TURC/2017/">大会的主页地址</a>
我也非常有幸的能够到会，在这里记录下会场见闻。</p>

<!--More-->


<h2>Day one</h2>

<h3>Opening keynote</h3>

<p>ACM SIGOPS主席Robbert van Renesse教授作了精彩的开场的报告。</p>

<p><img src="http://wxdwfc.github.io/images/chnsys/open.jpg" width="350"/></p>

<p>报告的主题是Supercloud: <em>A Library Cloud for Exploiting Cloud Diversity</em>。
主要讲述的是如何将用户的虚拟机在不同的cloud provider(比如微软的Azure，Amazon的EC2)上进行无缝的迁移。
这样做有很多好处，</p>

<ul>
<li><p>可以不依赖于provider的虚拟机结构，在所有provider之间运行用户的虚拟机。</p></li>
<li><p>可以平衡不同provider之间的延迟，将虚拟机部署在延迟最低的地方以提升用户性能。</p></li>
</ul>


<p>使用的方式是Nested virtualization也非常容易理解。</p>

<p>在报告的开始前首先介绍了SIGOPS这个组织以及希望更多的人来加入。
SIGOPS全称是Special interest group on operation System。在今年SIGOPS会在中国有很多活动，
比如说SOSP17将在上海召开，等等。</p>

<p><img src="http://wxdwfc.github.io/images/chnsys/sigops.jpg" width="350" /></p>

<hr />

<h2>Day two</h2>

<h3>Keynote</h3>

<p>第二天我只听了第一个开场keynote，由图林奖获得者John Hopcroft给出。
报告的题目是<em>Exciting Ideas in Computer Science</em>，
不过感觉基本上是在介绍Machine learning到Deep learning的一些历史，
看来大佬也觉得现在CS中最exciting的东西是AI相关的，感觉事实也是如此。</p>

<p><img src="http://wxdwfc.github.io/images/chnsys/john.jpg" width="350" /></p>

<h3>Chinasys Keynote 1</h3>

<p>Chinasys的第一个talk是讲如何制造类脑计算机。感觉这个太超前了没什么感想。</p>

<h3>Chinasys Keynote 2</h3>

<p>第二个Keynote由UCSB的谢源教授带来，讲述了从体系结构这里带来的未来十五年的展望。
这次chinasys给我印象最深的报告就是这个报告。</p>

<p>这个报告基于的是ISCA-2030年的展望。首先，如何展望未来十五年的发展？
我非常认同谢教授所说的，由于未来是非常难以预测的，因此我们可以从过去的发展进程来总结未来的发展趋势。</p>

<p>体系结构的性能提升中，50%是由技术(<strong>technology</strong>)驱动，50%是由架构(<strong>application</strong>)驱动。
技术驱动指的是，比如晶体管的体积变得越来越小等物理上的革新，而架构驱动则可以认为是体系架构的革新。
现在处于一个非常微妙的时代，传统技术的革新正在变慢，比如说摩尔定律开始失效。
同时，application的加速开始变得常见，由于新的workload，比如deep learning的workload开始变得愈发重要。</p>

<p>总而言之，这个报告非常精彩也给人很多启发。
我觉得System这方面很多时候也是由<strong>technology</strong>和<strong>application</strong>所驱动的。
那么System这个community对未来15年的展望是怎么样的呢？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2016 Review]]></title>
    <link href="http://wxdwfc.github.io/blog/2016/12/21/2016/"/>
    <updated>2016-12-21T15:18:48+08:00</updated>
    <id>http://wxdwfc.github.io/blog/2016/12/21/2016</id>
    <content type="html"><![CDATA[<p>2016年对于我来说，是在寻找与打磨自我中度过。
其中尤其是在下半年，我觉得我获得的最大的改变就是，至少在很多方面，我比以往要果断了许多。 逐渐抛弃了犹豫的自我，在今后，我想要获得的东西，希望也可以全部拿到。</p>

<p>在今年中， 零零碎碎地花了时间在一些"没用"的技能上，比如弹琴，比如拍照。一直想建立的个人网站也搭了起来，虽然不小心把网站的内容删了一次，但是在年末还是重新做了起来。经过这一年的洗礼，自己写代码的水平相比以往高了很多。虽然目前都是一些暂时看不到结果的东西，我也希望明年可以将他们汇聚成更大的果实。</p>

<p>最后，过去的一年中也受到许多人的照顾。非常感谢导师一直带给我的细心指导，感觉水平还没有达到要求，来年还需要努力。感谢父母对我的照顾，祝愿你们明年身体健康。还有许多许多人，在此就就不一一感谢了。</p>

<!--More-->


<h2>Best moments</h2>

<p><img src="http://xmm4ok69.com/images/2016/korea.jpg" width="350"/>
<br />
2016年的开头去了趟思密达国游玩，许下了新年的愿景。不过这一年下来我感觉非常惭愧，许下的期望基本没有实现。说到底还是自己不够努力。希望来年可以弥补遗憾。
<br />
接下来的几个月都沉迷于学习中，日渐消瘦(笑)。感觉是处于非常迷茫的一个时期。
<br />
<img src="http://xmm4ok69.com/images/2016/nihon1.jpg" width="350"/>
<img src="http://xmm4ok69.com/images/2016/nihon2.jpg" width="350"/></p>

<p>在暑假的时候和实验室的两位大神一起去了伊豆玩耍:)。伊豆的乡间超级美丽，随手拍一张照片感觉都可以构成一幅画。第一次住在温泉酒店，感觉超级赞。在东京还结识了在日本留学的友人。
<br />
下半年一次非常有收获的旅程便是和实验室的博士们和博士后补们去美国参加了计算机系统界的盛会OSDI。今年的OSDI在美国东部的萨凡纳召开，萨凡纳是一个非常美丽的城市，在美国也算是历史悠久的名城。
<br />
不过最重要的是，这次OSDI让我学习到了非常多的东西，比如你至少要写两万行coq才可以发一篇OSDI(认真)。虽然说没找到什么新的idea，但是看到了许多新的东西，也算是不枉此行。
<br />
<img src="http://xmm4ok69.com/images/2016/osdi_1.jpg" width="250"/> <img src="http://xmm4ok69.com/images/2016/osdi_2.jpg" width="450"/></p>

<p><br />
今年快要到年末的时候，让我最为兴奋的便是One ok rock来上海开演唱会的消息了。这也是我第一次来到演唱会的现场。现场的气氛真的超级赞，简直和DVD中的影像一模一样。希望来年能买到更好的位子。:)
<br />
<img src="http://xmm4ok69.com/images/2016/oor_live.jpg" width = "350" align=center /></p>

<p>最后，今年知道了一个非常非常棒的乐队，radwimps。乐队的名字非常玩味，rad+wimps，可以翻译成疯狂的胆小鬼。突然觉得这形容我自己也非常恰当，因为我自己是一个非常胆小的人，不过这并不影响我去做任何事情。用一句话来评论中简直就是音乐中的诗人。</p>

<p><img src="http://oisqg3gbh.bkt.clouddn.com/best_2016_.jpg" width = "350" align=center /></p>

<p>对于17年的自己，我希望，比起成为一个坚强的人，也要成为一个更加温柔的人啊。</p>
]]></content>
  </entry>
  
</feed>
